[metadata]
name = musicDL
version = attr: musicDL.__version__
url = https://github.com/25prabhu10/musicDL
license = MIT
license_file = LICENSE
author = Lois, Hal, Francis, Reese, Malcolm, Dewey and Jamie
description = A command-line utility that downloads song/albums/playlists from Saavn.
long_description = file: README.md
long_description_content_type = text/markdown
platforms = any
classifiers =
    Development Status :: 1 - Alpha
    Intended Audience :: End Users/Desktop
    Topic :: Multimedia
    Topic :: Multimedia :: Sound/Audio
    Topic :: Multimedia :: Sound/Audio :: Conversion
    Topic :: Multimedia :: Video
    Topic :: Utilities
    License :: OSI Approved :: MIT License
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3 :: Only
keywords =
    downloader
    download
    music
    mp3
    m4a
    song
    album
    playlist
    metadata
    tags
    Saavn
    lyrics

[options]
packages = find:
py_module = musicDL
python_requires = >=3.6
zip_safe = False
install_requires =
    appdirs>=1.4.4
    beautifulsoup4>=4.11.1
    click>=8.1.3
    lyricsgenius>=3.0.1
    mutagen>=1.46.0
    python-slugify>=6.1.2
    requests>=2.28.1
    rich>=12.6.0

[options.packages.find]
exclude =
    tests*

[options.entry_points]
console_scripts =
    musicDL = musicDL.__main__:main

[bdist_wheel]
universal = 1

[tool:pytest]
norecursedirs =
    dist
    build
    .tox
testpaths = tests

[coverage:run]
branch = True
omit = musicDL/vendor/pyDes.py
source =
    musicDL
    tests

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    def __str__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:


[flake8]
# Some sane defaults for the code style checker flake8
# black official is 88
max-line-length = 88
statistics = 1
# B = bugbear
# E = pycodestyle errors
# F = flake8 pyflakes
# W = pycodestyle warnings
# B9 = bugbear opinions
select = B, C, E, F, W, B9
# Excludes due to known issues or incompatibilities with black:
# BLK100: Black would make changes. https://pypi.org/project/flake8-black/
# W503: https://github.com/psf/black/search?q=W503&unscoped_q=W503
# E231: https://github.com/psf/black/issues/1202
ignore = BLK100,E231,W503
extend-ignore = E203, E501
exclude =
    .mypy_cache
    .git
    .pytest_cache
    .temp
    .tox
    .vscode
    build
    dist
    .eggs
    env
    venv


[mypy]
files = musicDL
pretty = True
python_version = 3.9
ignore_missing_imports = True
check_untyped_defs = True
disallow_any_generics = True
# disallow_any_unimported = True
disallow_incomplete_defs = True
disallow_subclassing_any = True
disallow_untyped_calls = True
disallow_untyped_defs = True
no_implicit_optional = True
show_error_codes = True
show_traceback = True
strict_equality = True
strict_optional = True
warn_no_return = True
warn_redundant_casts = True
warn_unused_configs = True
warn_unused_ignores = True
exclude = pyDes.py
